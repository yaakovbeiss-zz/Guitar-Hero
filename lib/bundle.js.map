{"version":3,"sources":["webpack:///webpack/bootstrap 10cccd01a919981d219d","webpack:///./lib/entry.js","webpack:///./lib/button.js","webpack:///./lib/channel.js","webpack:///./lib/note.js","webpack:///./lib/soundGenerator.js","webpack:///./lib/guitar.js","webpack:///./lib/modal.js","webpack:///./lib/songs.js","webpack:///./lib/imageGenerator.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACuE;AAC9C;AACT;;AAEhB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO;;AAEP;;AAEA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;;AAGL,GAAG;;;;;;;;AC7KH;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B,WAAW,sBAAsB,WAAW;AACzE;;AAEA;AACA;AACA,+BAA+B,WAAW;AAC1C;AACA;;AAEA;;;;;;;;;AClCA;;AAEA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;AC5CD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,WAAW;AACxD;AACA;;AAEA;AACA;AACA;AACA,kFAAkF,WAAW;AAC7F;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,oBAAoB,OAAO;;AAE3B;AACA;AACA;AACA,+BAA+B,MAAM,IAAI,cAAc;AACvD,SAAS;;AAET;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;;AAET;;AAEA;AACA;;;;;AAKA;;;;;;;;;;ACvDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAS;;AAET;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,MAAM;AACzC;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,MAAM;AAClD;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;AChCA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH,MAAM;AACN;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB,uCAAuC,UAAU;AACjD;;AAEA;AAAA;AAAA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 10cccd01a919981d219d","import Button from './button.js'\nimport Channel from './channel.js'\nimport SoundGenerator from './soundGenerator';\nimport Guitar from './guitar.js';\nimport { openModal, closeModal, openGameOverModal, closeGameOverModal } from './modal';\nimport { imageGenerator } from './imageGenerator.js';\nimport { SONGS } from './songs.js'\n\ndocument.addEventListener('DOMContentLoaded', ()=> {\n\n  imageGenerator();\n\n  let chooseSong = () => {\n    let trackNumber = parseInt(document.querySelector('input[name=\"track\"]:checked').value);\n\n    let track = SONGS[trackNumber].backtrack\n    let guitar = SONGS[trackNumber].guitar\n    let numCuts = SONGS[trackNumber].numCuts\n    let fileType = SONGS[trackNumber].fileType\n\n      let generator = new SoundGenerator(guitar, track, fileType);\n\n      generator.generateSounds(numCuts, ()=> {\n\n        let greenButton = new Button('green');\n        let redButton = new Button('red');\n        let yellowButton = new Button('yellow');\n        let blueButton = new Button('blue');\n        let orangeButton = new Button('orange');\n\n        let greenChannel = new Channel('green')\n        let redChannel = new Channel('red')\n        let yellowChannel = new Channel('yellow')\n        let blueChannel = new Channel('blue')\n        let orangeChannel = new Channel('orange')\n\n          let start = document.getElementById('start-button');\n          start.addEventListener('click', () => {\n            startGame();\n          })\n\n          let startGame = () => {\n\n            closeModal();\n            window.song = generator.song;\n            window.crowd = generator.crowd;\n            const playlist = generator.playlist;\n\n            const guitar = new Guitar([\n              greenChannel,\n              redChannel,\n              yellowChannel,\n              blueChannel,\n              orangeChannel\n            ],\n            [\n              greenButton,\n              redButton,\n              yellowButton,\n              blueButton,\n              orangeButton\n            ],\n              playlist\n            )\n\n              song.play();\n              crowd.play();\n              guitar.playSong();\n              let duration = song.duration() * 1000\n\n              let endGameTimer = setTimeout( () => {\n                endGame(guitar);\n              }, duration)\n              const endGameButton = document.getElementById('endgame-button');\n              endGameButton.addEventListener('click', () => {\n                endGame();\n              })\n              let endGame = () => {\n                generator.playlist = [];\n                guitar.playlist = []\n                guitar.clearIntervals();\n                clearInterval(endGameTimer);\n                song.stop();\n                crowd.stop();\n                window.song = null;\n                window.crowd = null;\n                document.querySelector('input[name=\"track\"]:checked').checked = false;\n                openGameOverModal();\n              }\n\n\n\n      window.addEventListener(\"keydown\", (e) => {\n\n        switch (e.keyCode) {\n          case 65:\n          case 192:\n            greenButton.pressButton(greenChannel.notes[0]);\n            break\n          case 49:\n          case 83:\n            redButton.pressButton(redChannel.notes[0]);\n            break\n          case 50:\n          case 68:\n            yellowButton.pressButton(yellowChannel.notes[0]);\n            break;\n          case 51:\n          case 70:\n            blueButton.pressButton(blueChannel.notes[0]);\n            break;\n          case 52:\n          case 71:\n            orangeButton.pressButton(orangeChannel.notes[0]);\n            break;\n          case 34:\n          case 32:\n          guitar.strum()\n            break;\n          default:\n\n        }\n\n      })\n\n      window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n          case 65:\n          case 192:\n            greenButton.unpressButton(greenChannel.notes[0]);\n            break\n          case 49:\n          case 83:\n            redButton.unpressButton(redChannel.notes[0]);\n            break\n          case 50:\n          case 68:\n            yellowButton.unpressButton(yellowChannel.notes[0]);\n            break;\n          case 51:\n          case 70:\n            blueButton.unpressButton(blueChannel.notes[0]);\n            break;\n          case 52:\n          case 71:\n            orangeButton.unpressButton(orangeChannel.notes[0]);\n            break;\n            case 32:\n            break;\n          default:\n\n        }\n\n      })\n\n    }\n\n      });\n    }\n\n    const choice = document.getElementById('choice');\n    choice.addEventListener('click', () => {\n      if( document.querySelector('input[name=\"track\"]:checked') ){\n        chooseSong();\n      }\n    })\n    const restart = document.getElementById('restart-button');\n    restart.addEventListener('click', () => {\n        closeGameOverModal();\n        openModal();\n    })\n\n\n  })\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/entry.js\n// module id = 0\n// module chunks = 0","class Button {\n  constructor(color){\n    this.color = color;\n    this.pressed = false;\n    this.button = document.getElementById(`${this.color}-button`);\n    // this.playLongNote = this.playLongNote.bind(this);\n  }\n\n  unpressButton(note){\n    this.pressed = false;\n    this.button.className = `${this.color}-unpressed button`;\n    if(note){\n      note.pressed = false;\n\n      if(note.length === 'long'){\n        note.sound.stop();\n      }\n    }\n  }\n\n  controlCrowd(){\n    crowd._volume = crowd._volume / 2;\n  }\n\n  buttonClass(){\n    return this.pressed ? `${this.color}-pressed button` : `${this.color}-unpressed button`;\n  }\n\n  pressButton(note){\n    this.pressed = true;\n    this.button.className = `${this.color}-pressed button`;\n  }\n}\n\nexport default Button;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/button.js\n// module id = 1\n// module chunks = 0","import Note from './note.js';\n\nexport default class Channel{\n  constructor(color){\n    this.color = color;\n    this.canvas = document.getElementById(`${this.color}`)\n    this.targetPosition = 0;\n    this.playNotes = this.playNotes.bind(this);\n    this.notes = [];\n  }\n\n  playNotes(sound, otherButton){\n\n    let note = new Note(sound, this.color, otherButton);\n    this.notes.push(note);\n\n    let timer = setInterval( ()=> {\n      note.drawNote(note);\n      note.pos += 1;\n\n      const eraseNote = (note.length === 'long') ? ( ( (note.sound.duration() / 3) * 130 ) + 150) : 150;\n      if(note.pos > eraseNote){\n        this.notes.shift();\n        clearInterval(timer)\n        if(!note.sound.playing()){\n          missedSound.play();\n        }\n      }\n    }, 10)\n\n  }\n\n  aligned() {\n    if(this.notes.length > 0){\n      let note = this.notes[0];\n      return (note.pos > 95 && note.pos < 155)\n    }\n  }\n\n}\nlet missedSound = new Howl({\n  buffer: true,\n  html5: true,\n  src: ['https://s3.us-east-2.amazonaws.com/guitar-hero/missed_note.mp3']\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/channel.js\n// module id = 2\n// module chunks = 0","class Note{\n  constructor(sound, color, otherButton){\n    this.sound = sound;\n    this.color = color;\n    this.otherButton = otherButton;\n    this.ctx = null;\n    this.pos = 0;\n    this.length = this.sound.duration() > 2.5 ?  'long' : 'short';\n    this.pressed = false;\n    this.canvas = document.getElementById(`${this.color}`)\n    this.longNote = this.longNote.bind(this);\n  }\n\n  drawNote(note){\n    note.ctx = this.canvas.getContext('2d');\n    let image = new Image;\n    image.src = note.pressed ? `assets/images/notePressed.png` : `assets/images/${this.color}note.png`;\n    note.ctx.drawImage(image, 0, note.pos)\n\n    note.ctx.clearRect(0, note.pos - 3, 300, 10)\n    if(note.length === 'long'){\n      this.longNote(note)\n    }\n  }\n\n  longNote(note){\n    note.ctx = this.canvas.getContext('2d');\n\n    let my_gradient = note.ctx.createRadialGradient(75,100,200,90,60,5);\n\n    if(!note.sound.playing()){\n\n      switch (note.color) {\n        case 'green':\n        my_gradient.addColorStop(.5,\"#75d35b\");\n        break;\n        case 'red':\n        my_gradient.addColorStop(.5,\"#cf585c\")\n        break;\n        case 'yellow':\n        my_gradient.addColorStop(.5,\"#e6e883\")\n        break;\n        case 'blue':\n        my_gradient.addColorStop(.5,\"#6bb6d1\")\n        break;\n        case 'orange':\n        my_gradient.addColorStop(.5,\"#d0b35a\")\n        break;\n        default:\n      }\n      my_gradient.addColorStop(0,\"#241d1d\");\n      my_gradient.addColorStop(1,\"#241d1d\");\n      note.ctx.fillStyle = my_gradient;\n      note.ctx.fillRect(100, note.pos - 3, 100, 10)\n      let length = ( (note.sound.duration() / 3) * 130 );\n      note.ctx.clearRect(0, note.pos - length, 300, 10)\n\n    }\n    else {\n      let my_gradient = note.ctx.createLinearGradient(0,0,0,170);\n      my_gradient.addColorStop(0,\"#dcf8ff\");\n      my_gradient.addColorStop(.25,\"white\");\n      my_gradient.addColorStop(.5,\"#dcf8ff\")\n      my_gradient.addColorStop(.75,\"white\")\n      my_gradient.addColorStop(1,\"#dcf8ff\");\n      note.ctx.fillStyle = my_gradient;\n      let length = ( (note.sound.duration() / 3) * 130 );\n      note.ctx.fillRect(100, note.pos - length, 100, (length + 10))\n      note.ctx.clearRect(0, note.pos - length, 300, 10)\n      note.ctx.clearRect(0, 0, 300, 0 + (note.pos - length))\n    }\n\n  }\n}\n\n\n\nexport default Note;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/note.js\n// module id = 3\n// module chunks = 0","class SoundGenerator{\n  constructor(url, backtrackUrl, fileType){\n    this.backtrackUrl = backtrackUrl;\n    this.fileType = fileType;\n    this.song = null;\n    this.url = url;\n    this.playlist = [];\n    this.crowd = null;\n  }\n\n  generateSounds(n, callback){\n    let crowd = new Howl({\n      buffer: true,\n      html5: true,\n      loop: true,\n      volume: 0.0,\n      src: [\"https://s3.us-east-2.amazonaws.com/guitar-hero/crowd.mp3\"]\n    })\n    let song = new Howl({\n      buffer: true,\n      html5: true,\n      src: [this.backtrackUrl]\n    })\n\n      let k = 0;\n      for(let i = 0; i < n; i++) {\n\n        let sound = new Howl({\n          buffer: true,\n          html5: true,\n          src: [this.url + `(${i + 1}).${this.fileType}`]\n        })\n\n        sound.on('load',() =>{\n          this.playlist[i] = sound\n          k += 1;\n\n\n          if (k === n && song.state() === \"loaded\" && crowd.state() === \"loaded\") {\n            this.song = song;\n            this.crowd = crowd;\n\n            callback()\n\n          }\n        })\n\n      }\n\n    }\n  }\n\n\n\n\nexport default SoundGenerator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/soundGenerator.js\n// module id = 4\n// module chunks = 0","import Button from './button.js'\nimport Channel from './channel.js'\n\nclass Guitar{\n  constructor(channels, buttons, playlist){\n    this.channels = channels;\n    // this.channels = this.createChannels();\n    this.buttons = buttons;\n    // this.buttons = this.createButtons();\n    this.playlist = playlist;\n    this.intervals = [];\n    this.doubleNote = false\n    this.strum = this.strum.bind(this);\n    this.unStrum = this.unStrum.bind(this);\n  }\n\n  playSong(){\n    let timing = 0;\n    setTimeout( () => {\n      for(let i = 0; i < this.playlist.length; i++){\n        this.intervals.push(setTimeout( ()=> {\n          let sound = this.playlist.shift();\n          switch ( Math.floor((Math.random() * 7) + 1) ) {\n            case 1:\n              this.channels[0].playNotes(sound);\n\n              break;\n            case 2:\n              this.channels[1].playNotes(sound);\n\n              break;\n            case 3:\n              this.channels[2].playNotes(sound);\n\n              break;\n            case 4:\n              this.channels[3].playNotes(sound);\n\n              break;\n            case 5:\n              this.channels[4].playNotes(sound);\n\n              break;\n            case 6:\n            case 7:\n              let first = Math.floor((Math.random() * 5) )\n              let second = Math.floor((Math.random() * 5) )\n              let firstButton = this.buttons[first];\n              let secondButton = this.buttons[second];\n              this.channels[first].playNotes(sound, secondButton);\n              this.channels[second].playNotes(sound, firstButton);\n\n              break;\n            default:\n              this.channels[0].playNotes(sound);\n          }\n\n        }, timing) )\n\n        timing += (this.playlist[i].duration() * 960);\n      }\n    }, 3490)\n  }\n\n  updateScore(points){\n    let score = document.getElementById('score');\n    let numScore = parseInt(score.innerText) + points;\n    score.innerText = numScore;\n    crowd._volume = numScore / 4000;\n    crowd.play();\n  }\n\n  strum(){\n    let currentChannels = [];\n    this.channels.forEach( (channel, idx) =>{\n       if (channel.aligned()){\n         currentChannels.push(idx)\n       }\n    })\n    if(currentChannels.every( idx => this.buttons[idx].pressed )){\n      const channel = this.channels[currentChannels[0]];\n\n      if(channel && !channel.notes[0].sound.playing()){\n        channel.notes[0].sound.play()\n        this.updateScore(10);\n        let duration = channel.notes[0].sound.duration() * 981;\n        this.lightButtons(currentChannels, duration)\n      }\n    }\n\n  }\n\n  lightButtons(currentChannels, duration){\n    currentChannels.forEach( idx => {\n      let button = this.buttons[idx]\n      let color = button.color;\n      button.button.className = `${color}-pressed-lit button`;\n      this.unStrum(duration, button);\n    })\n  }\n\n  unStrum(duration, button){\n    setTimeout( () => {\n      button.button.className = button.buttonClass();\n    }, duration)\n  }\n\n  clearIntervals(){\n    this.intervals.forEach( (interval) => {\n      clearInterval(interval);\n    })\n  }\n\n}\n\nexport default Guitar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/guitar.js\n// module id = 5\n// module chunks = 0","export const openModal = () => {\n   const modal = document.getElementById('modal');\n   const modalContainer = document.getElementById('modal-container');\n   modal.className = 'modal';\n   modalContainer.className = 'modal-container';\n\n}\n\nexport const closeModal = () => {\n  const modal = document.getElementById('modal');\n  const modalContainer = document.getElementById('modal-container');\n  modalContainer.className = 'hidden';\n  modal.className = 'hidden';\n}\n\nexport const openGameOverModal = () => {\n   const modal = document.getElementById('game-over-modal');\n   const modalContainer = document.getElementById('modal-container');\n   modalContainer.className = \"modal-container\"\n   modal.className = 'modal';\n   const score = document.getElementById('score').innerText;\n   const gameOverScore = document.getElementById('game-over-score');\n   gameOverScore.innerText = `You scored: ${score}`;\n}\n\nexport const closeGameOverModal = () => {\n  const modal = document.getElementById('game-over-modal');\n  const modalContainer = document.getElementById('modal-container');\n  modalContainer.className = 'hidden';\n  modal.className = 'hidden';\n  const score = document.getElementById('score');\n  score.innerText = \"0\";\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/modal.js\n// module id = 6\n// module chunks = 0","export const SONGS = {\n  2: { // I love rock and roll, timing * 984 and start song after 3500\n    guitar: `https://s3.us-east-2.amazonaws.com/guitar-hero/iloverockandrollupdated/0+`,\n    backtrack: `https://s3.us-east-2.amazonaws.com/guitar-hero/iloverockandrollupdated/iloverockandrollbackingtrack.mp3`,\n    numCuts: 84,\n    fileType: \"wav\",\n  },\n  1: { // I love rock and roll, timing * 984 and start song after 3500\n    guitar: `https://s3.us-east-2.amazonaws.com/guitar-hero/iloverockandrollmp3/0+`,\n    backtrack: `https://s3.us-east-2.amazonaws.com/guitar-hero/iloverockandrollupdated/iloverockandrollbackingtrack.mp3`,\n    numCuts: 111,\n    fileType: \"mp3\",\n  },\n  3: {\n    guitar: `https://s3.us-east-2.amazonaws.com/guitar-hero/smokeonthewater/0+`,\n    backtrack: `https://s3.us-east-2.amazonaws.com/guitar-hero/smokeonthewater/song.mp3`,\n    numCuts: 330,\n    fileType: \"mp3\",\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/songs.js\n// module id = 7\n// module chunks = 0","export const imageGenerator = () => {\n  let allImages = document.getElementById('images')\n  let images = new Array();\n  images[0] = \"assets/images/blue-buttonPressed.png\";\n  images[1] = \"assets/images/green-buttonPressed.png\";\n  images[2] = \"assets/images/orange-buttonPressed.png\";\n  images[3] = \"assets/images/red-buttonPressed.png\";\n  images[4] = \"assets/images/yellow-buttonPressed.png\";\n\n  images[5] = \"assets/images/blue-buttonPressedLit.png\";\n  images[6] = \"assets/images/green-buttonPressedLit.png\";\n  images[7] = \"assets/images/orange-buttonPressedLit.png\";\n  images[8] = \"assets/images/red-buttonPressedLit.png\";\n  images[9] = \"assets/images/yellow-buttonPressedLit.png\";\n\n  images[10] = \"assets/images/bluenote.png\";\n  images[11] = \"assets/images/greennote.png\";\n  images[12] = \"assets/images/orangenote.png\";\n  images[13] = \"assets/images/rednote.png\";\n  images[14] = \"assets/images/yellownote.png\";\n\n  for(let i = 0; i <= 14; i++){\n    allImages.innerHTML += `<img src=${images[i]}>` \n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/imageGenerator.js\n// module id = 8\n// module chunks = 0"],"sourceRoot":""}